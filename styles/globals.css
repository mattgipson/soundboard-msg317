/* globals.css or a separate .css file */
html { height:100%; }
body {
    background-color: rgba(255,255,255,0);
    opacity: 0.8;
    background-image:  linear-gradient(#222222 1px, transparent 1px), linear-gradient(to right, #222222 1px, rgba(255,255,255,0) 1px);
    background-size: 20px 20px;
    height:100%;
}

/* Neumorphic “container” look (replace Bulma’s .box if you want) */

  
  /* Our standard button style in a neumorphic theme */
  .neumorphic-button {
    padding: 1rem;
    background: #111; /* a light gray base */
    border-radius: 12px;
    box-shadow: 8px 8px 16px #111, -8px -8px 16px #222;
    transition: box-shadow 0.2s ease;
    border:1px solid #222;
    width:100%;
  }
  
  /* “Pressed” state — create an inset box-shadow to simulate being pushed in */
  .neumorphic-button.pressed {
    box-shadow: inset 6px 6px 12px #111, inset -6px -6px 12px #000 !important;
    transform: translateY(2px); /* subtle shift to look pressed */
  }

  /* Audio visualizer container */
.audio-visualizer-container {
    display: inline-block;
    padding: 1rem;
    background: #14161a;
    border-radius: 8px;
    border:1px solid #333;
    box-shadow: 8px 8px 16px #111, -8px -8px 16px #222;
  }
  
  /* The canvas inside it */
  .audio-visualizer-canvas {
    background-color: #222;
    border-radius: 4px;
    display: block;
    margin: 0 auto;
  }



  /* We have a "sound-button" class for easy targeting: */
.sound-button {
    border-radius: 6px !important; /* override Bulma's default if you like */
    box-shadow: 2px 2px 4px rgba(0,0,0,0.2);
    transition: transform 0.1s ease, box-shadow 0.1s ease;
    cursor: pointer;
  }
  
  /* On hover, a subtle lift */
  .sound-button:hover {
    transform: translateY(-2px);
    box-shadow: 4px 4px 8px rgba(0,0,0,0.2);
  }
  
  /* "Pressed" effect for isActive or on click */
  .is-active-button {
    transform: translateY(2px);
    box-shadow: inset 2px 2px 4px rgba(0,0,0,0.2);
  }
  .is-active-button .sound-button-key {
    color:greenyellow;
    transition: color 0.15s ease;
  }
  
  /* Dot styling could also be done here, 
     though we set color via .has-background-success / .has-background-grey-light */
  .sound-button-dot {
    border: 1px solid #222;
  }
  
  /* .sound-button-key, .sound-button-file (these are optional classes you can refine) */
  .sound-button-key {
    margin-bottom: 0.25rem;
  }
  
  .sound-button-file {
    color: #555;
  }
  
  .soundboard-instructions {
    font-size: 1rem;
    margin-bottom: 0.5rem;
  }
  
  .soundboard-buttons {
    margin-top: 1rem;
  }

  .soundboard-buttons {
    max-width:none!important;
  }

  .current-filename {
    font-size: 0.8rem;
    text-align: center;
    color: #ccc;
  }




  .soundboard-layout {
    display: flex;
    min-height: 100vh;
  }
  
  /* Sidebar styling */
  .sidebar {
    width: 350px;
    background: #222;
    border-right: 1px solid #111;
    padding: 2rem 3rem 2rem 2rem;
    position: relative; /* so the close button sits inside */
    transition: transform 0.3s ease;
  }
  
  .sidebar.is-open {
    transform: translateX(0);
    display:block;
  }
  
  .sidebar {
    transform: translateX(-100%); /* hidden by default, if you want that approach */
    display: none;
  }
  
  /* However, we set it open by default in code, 
     so if you want it open initially, you might do:
  */
  .sidebar.is-open {
    transform: translateX(0);
  }
  
  /* Sidebar header */
  .sidebar-header {
    margin-bottom: 1rem;
    position: relative;
  }
  
  .sidebar-close-btn {
    position: absolute;
    top: 0rem;
    right: -1.5rem;
  }
  
  /* Main content area, flex grows to fill space */
  .main-content {
    flex: 1;
    transition: margin-left 0.3s ease;
  }
  
  /* If the sidebar is open, we can push main content to the right: 
     But if you prefer an "overlay" sidebar, you can skip adjusting content. */


  .toggle-sidebar-btn {
    position:absolute;
  }